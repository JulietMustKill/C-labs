Лаб-5(5в)
#include <stdio.h>
#include <math.h>
int main()
{
    int x, y, res;
    printf("Число-");
    scanf("%d", &x);
    printf("Степень-");
    scanf("%d", &y);
    if(y>0)
    {res = pow(x, y);
    printf("res-> %d\n", res);}
    else{
        res = pow(1/x, -y);
        printf("res->%d\n", res);}
    int resss;
    int ress=x;
    for(int i=1; i <= y; i++)
    {
        resss =ress * ress;
        printf("resss->%d\n", resss);
    }
    return 0;
}
\\\\\\\\\\\\\\\\\\\\\\\\\\\
Рекурсия
#include <stdio.h>
#include <math.h>
float step(int a, int b){
    int res;
    if(a>0)
    {res = pow(a, b);}
    else{
        res = pow(1/a, -b);}
        return res;
}
int main(){
    int x, y;
    printf("Число-");
    scanf("%d", &x);
    printf("Степень-");
    scanf("%d", &y);
    float Recursion = step(x,y);
    printf("Recursion %.2f\n", Recursion);}
\\\\\\\\\\\\\\\\\\\
int main(){
    int a;
    int b;
    scanf("%d", &a);
 while(a%2==0){
    a = a / 2;
     printf("stepen %d", a);
     if(a==1)
         printf("noy");
     else
         printf("yes");
 }
 ........................
Тело для 6 лабы(значения в массивах будут рандомными) 
#include <stdio.h>
#include <math.h>
#include<time.h>
#include "stdio.h"
void fill(int n, ){//функция будет проверять есть ли одинаковые значения у 1-го и 2-го массива

}
void rgg(){//создаст 3-ий массив из результата функции fill

}
int main(){
    int n;
    printf("n->");
    scanf("%d", &n);
    int A[n];   //создаём первый массив размером n
    int f;
    printf("f->");
    scanf("%d", &f);
    int B[f];   //создаём второй массив размером f
}
//////////////////////////////////////
Значения сразу введены, чтобы узнать правильность работы программы
#include <stdio.h>
#include <math.h>
#include<time.h>
#include "stdio.h"
void fill(int n, int A[], int f, int B[]){//функция будет проверять есть ли одинаковые значения у 1-го и 2-го массива
for (int i=0; A[n]> i; i++)
{
    int a= A[n];
    for (int j=0; j< B[f];j++)
    {
        if (a==B[f]){
            printf(a);
        }
    }
}
}
int main(){
    char one[3]={'1','3','5'};
    char two[3]={'3','6','9'};
    fill(3, one, 3, two);
    return 0;
}
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
Попытка 1
#include <stdio.h>
#include <math.h>
#include<time.h>
#include "stdio.h"
void fill(int n, int A[], int f, int B[]){//функция будет проверять есть ли одинаковые значения у 1-го и 2-го массива
    for (int i=0; A[n]> i; i++)
{
    int a= A[n];
    for (int j=0; j< B[f];j++)
    {
        if (a==B[f]){
            printf(a);
        }
    }
}
}
int main(){
    char one[3]={'1','3','5'};
    char two[3]={'3','6','9'};
    fill(3, one, 3, two);
    return 0;
} \\ничего не выводит
...................................
#include "stdio.h"
#include "stdlib.h"
#include "time.h"
#include <stdio.h>
int main() {
    int i, j;
    int B[3][3];
    int A[3][3];

    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++)
            A[i][j] = rand() % 10;}
        printf("Получившиеся массивы:\n");
        for (i = 0; i < 3; i++) {
            for (j = 0; j < 3; j++) {
                printf("[%d][%d]=%d ", i, j, A[i][j]);
            }}
    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++)
            B[i][j] = rand() % 10;
    }
        printf("\n");
        for (i = 0; i < 3; i++) {
            for (j = 0; j < 3; j++) {
                printf("[%d][%d]=%d ", i, j, B[i][j]);
            }
            printf("\n");
        }
        getchar();
}\\выводит 2 массива (1 из котороговыводится только в 1 строку)
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//Половина 7 лабы
#include "stdio.h"
#include "stdlib.h"
#include "time.h"
float one(int a, int b){//будут создаваться матрицы
    int i,j;
    int S[a][b];
    int V[a][b];
    for (i = 0; i < a; i++) {
        for (j = 0; j < b; j++)
            S[i][j] = rand() % 10;
            V[i][j] = rand() % 10;}
        printf("Первая матрица:\n");
        for (i = 0; i < a; i++) {
            for (j=0 ; j < b; j++) {
                printf("[%d][%d]=%d ", a, b, S[i][j]);
            }
            printf("\n");}
        printf("\n");
        printf("Вторая матрица:\n");
        for (i = 0; i < a; i++) {
            for (j = 0; j < b; j++) {
               printf("[%d][%d]=%d ", a, b, V[i][j]);
           }
            printf("\n");
      }

}
int main(){
 int m,n;
    scanf("%d", &m); //ввод размеров матрицы
    scanf("%d", &n);
    int mat=one( m, n);
    printf(mat);
}
...........................................................................................................................................................................
//Первая попытка
//Две матрицы 3х3 с рандомными числами 
#include "stdio.h"
#include "stdlib.h"
#include "time.h"
int main() {
    int i, j;
    int B[3][3];
    int A[3][3];

    for (i = 0; i < 3; i++) { //Созание первой матрицы
        for (j = 0; j < 3; j++)
            A[i][j] = rand() % 10;
    }
    printf("Первая матрица:\n");  //Вывод первой матрицы
    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++) {
            printf("[%d][%d]=%d ", i, j, A[i][j]);
        }
        printf("\n");
    }
    for (i = 0; i < 3; i++) { //Созание второй матрицы
        for (j = 0; j < 3; j++)
            B[i][j] = rand() % 10;
    }
    printf("\n");
    printf("Вторая матрица:\n");  //Вывод второй матрицы
    for (i = 0; i < 3; i++) {
        for (j = 0; j < 3; j++) {
            printf("[%d][%d]=%d ", i, j, B[i][j]);
        }
        printf("\n");
    }
    printf("\n");
    printf("Сумма матриц A и B\n");
    int C[i][j];
    for (int i = 0; i < 3; ++i)  //Сложение 2-х матриц
        for (int j = 0; j < 3; ++j)
            C[i][j] = A[i][j] + B[i][j];
    for (int i = 0; i < 3; ++i) {  //Вывод результата
        for (int j = 0; j < 3; ++j){
            printf("[%d][%d]=%d ", i, j, C[i][j]);
        }
        printf("\n");
    }
    getchar();
}

